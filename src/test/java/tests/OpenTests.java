package tests;

import com.codeborne.selenide.logevents.SelenideLogger;
import io.qameta.allure.Description;
import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import static com.codeborne.selenide.Condition.*;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;

public class OpenTests extends BaseTest {

    @CsvSource(value = {
            "Кредиты, Потребительские кредиты",
            "Кредиты, Кредит наличными",
            "Кредиты, Зарплатным клиентам",
            "Кредиты, Кредит на автомобиль",
            "Кредиты, Рефинансирование",
            "Кредиты, Кредитные карты",
            "Кредиты, Карта 120 дней",
            "Кредиты, Opencard кредитная",
            "Кредиты, Карта «Все что надо»",
            "Кредиты, Погашение кредита",
            "Кредиты, Снижение финансовой нагрузки",
            "Кредиты, Вопросы и ответы по кредиту наличными для действующих клиентов",
    })

    @ParameterizedTest(name = "Проверка наличия в главном меню раздела {0}," +
            " его открытия, и доступности в нем элемента {1}")
    @Owner("astranotus8@gmail.com")
    @Feature("Главное верхнее меню")
    @DisplayName("Доступность элементов при открытии раздела 'Кредиты'")
    @Description("Тест нажимает на пункт 'Кредиты' главного верхнего меню, открывается выпадающее меню," +
            " тест проверяет наличие и доступность элементов 'Потребительские кредиты', 'Кредит наличными', " +
            "'Зарплатным клиентам', 'Кредит на автомобиль', 'Рефинансирование', 'Кредитные карты', 'Карта 120 дней'," +
            "'Opencard кредитная', 'Карта «Все что надо»', 'Погашение кредита', 'Снижение финансовой нагрузки'," +
            "'вопросы и ответы по кредиту наличными для действующих клиентов'. ")
    public void mainPageTest(String menu, String element) {
        step("Открываем главную страницу", () -> {
            mainPage.openPage();
        });
        step("Нажимаем на пункт главного меню arg0", () -> {
            mainPage.clickMainMenu(menu);
        });
        step("Нажимаем на элемент arg1 в выпадающем меню.", () -> {
            mainPage.clickOpenMainMenu(element);
        });
    }


    @Test
    @Owner("astranotus8@gmail.com")
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на карту 'Opencard' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' карту 'Opencard'," +
            " нажимает на кнопку 'Оформить карту', проверяет заголовок страницы, на которую переходит.")
    public void offersOpencard() {
        step("Открываем главную страницу", () -> {
            mainPage.openPage();
        });
        step("Проверяем наличие предложения от банка с картой 'Opencard'", () -> {
            $(".offers__card").shouldHave(text("Карта Opencard"));
        });
        step("Внутри предложения с картой 'Opencard' нажимаем кнопку 'Оформить карту'", () -> {
            $(".offers__card").shouldHave(text("Оформить карту")).click();
        });
        step("На открывшейся странице находим заголовок 'Ваша новая Opencard'", () -> {
            mainPage.openPage();
        });
    }

    @Test
    @Owner("astranotus8@gmail.com")
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на карту '120 дней' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' карту '120 дней'," +
            " нажимает на кнопку 'Оформить карту', проверяет заголовок страницы, на которую переходит.")
    public void offer120Days() {
        step("Открываем главную страницу", () -> {
            mainPage.openPage();
        });
        step("Проверяем наличие предложения от банка с картой '120 дней'", () -> {
            $(".offers__card", 1).shouldHave(text("Карта 120 дней"));
        });
        step("Внутри предложения с картой '120 дней' нажимаем кнопку 'Оформить карту'", () -> {
            $(".offers__card", 1).shouldHave(text("Оформить карту")).click();
        });
        step("На открывшейся странице находим заголовок 'Кредитная Карта — 120 дней без % и платежей'", () -> {
            $(".bs-header__page-title").shouldHave(text("Кредитная Карта — 120 дней без % и платежей"));
        });
    }

    @Test
    @Owner("astranotus8@gmail.com")
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на 'Кредит наличными' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' 'Кредит наличными'," +
            " нажимает на кнопку 'Оформить кредит', проверяет заголовок страницы, на которую переходит.")
    public void offerСredit() {
        step("Открываем главную страницу", () -> {
            mainPage.openPage();
        });
        step("Проверяем наличие предложения от банка с кредитом 'Кредит наличными'", () -> {
            $(".offers__card", 2).shouldHave(text("Кредит наличными"));
        });
        step("Внутри предложения с кредитом нажимаем кнопку 'Оформить кредит'", () -> {
                    $(".offers__card", 2).shouldHave(text("Оформить кредит")).click();
                });
        step("На открывшейся странице находим заголовок 'Кредит наличными'", () -> {
            $(".BannerWrapper_banner-block-wrapper__zZlun").shouldHave(text("Кредит наличными"));
        });
    }
}
