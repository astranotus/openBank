package tests;

import io.qameta.allure.Description;
import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;


import static io.qameta.allure.Allure.step;

@Owner("astranotus8@gmail.com")
public class OpenTests extends BaseTest {

    @CsvSource(value = {
            "Кредиты, Потребительские кредиты",
            "Кредиты, Кредит наличными",
            "Кредиты, Зарплатным клиентам",
            "Кредиты, Кредит на автомобиль",
            "Кредиты, Рефинансирование",
            "Кредиты, Кредитные карты",
            "Кредиты, Карта 120 дней",
            "Кредиты, Opencard кредитная",
            "Кредиты, Карта «Все что надо»",
            "Кредиты, Погашение кредита",
            "Кредиты, Снижение финансовой нагрузки",
            "Кредиты, Вопросы и ответы по кредиту наличными для действующих клиентов",
    })

    @ParameterizedTest(name = "Проверка наличия в главном меню раздела {0}," +
            " его открытия, и доступности в нем элемента {1}")
    @Feature("Главное верхнее меню")
    @DisplayName("Доступность элементов при открытии раздела 'Кредиты'")
    @Description("Тест нажимает на пункт {0} главного верхнего меню, открывается выпадающее меню," +
            " тест проверяет наличие и доступность элемена {1}")
    public void mainPageHeaderMenuTest(String menu, String element) {
            mainPage.openPage();
        step("Нажимаем на пункт главного меню " + menu +".", () -> {
            mainPage.clickMainMenu(menu);
        });
        step("Нажимаем на элемент " + element + " в выпадающем меню.", () -> {
            mainPage.checkOpenMainMenu(element);
        });
    }


    @Test
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на карту 'Opencard' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' карту 'Opencard'," +
            " нажимает на кнопку 'Оформить карту', проверяет заголовок страницы, на которую переходит.")
    public void offersOpencard() {
            mainPage.openPage()
                    .checkOfferOpencard()
                    .clickButtonOrderOpencard()
                    .checkHeaderOpencard();
    }

    @Test
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на карту '120 дней' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' карту '120 дней'," +
            " нажимает на кнопку 'Оформить карту', проверяет заголовок страницы, на которую переходит.")
    public void offer120Days() {
            mainPage.openPage()
                    .checkOffer120Days()
                    .clickButtonOrder120Days()
                    .checkHeader120days();
    }

    @Test
    @Feature("Предложения в разделе 'Лучшее от банка'")
    @DisplayName("Возможность перейти на страницу заявки на 'Кредит наличными' из раздела 'Лучшее от банка'")
    @Description("Тест находит на главной странице в разделе 'Лучшее от банка' 'Кредит наличными'," +
            " нажимает на кнопку 'Оформить кредит', проверяет заголовок страницы, на которую переходит.")
    public void offerСredit() {
            mainPage.openPage()
                    .checkOfferCredit()
                    .clickButtonOrderCredit()
                    .checkHeaderCredit();
    }
}
